pragma solidity 0.6.2;

//from Jiuzhou

//line 17

contract SigWrongPara{
    bytes32 private idHash;
    
    constructor() public payable{
        require(msg.value > 0);
        idHash = keccak256(abi.encode(msg.sender));
    }
    
    //If _id is 0x0, and part of (_hash, v, r, s) are wrong. ecrecover() return 0x0. So pass the check 
    function getMyMoney(address payable _id, bytes32 _hash, uint8 v, bytes32 r, bytes32 s) external returns(bool){
        //The function signature (function selector) refers to the first four bytes of the call data for a function call. it specifies the function to be called. The function signature is generated by the keccak256(). In some cases, two different functions may have the same function signature.
        if(_id != ecrecover(_hash, v, r, s))
            return false;
        _id.transfer(address(this).balance);
        return true;
    }
    
}